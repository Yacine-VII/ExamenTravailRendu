// <auto-generated />
using System;
using E.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E.Infrastructure.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20231113224104_testmigration")]
    partial class testmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E.ApplicationCore.Domain.Athlete", b =>
                {
                    b.Property<int>("NumeroLicence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroLicence"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cathegory")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomAthlete")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrenomAthlete")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NumeroLicence");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Entrainement", b =>
                {
                    b.Property<int>("NumEntrainement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumEntrainement"));

                    b.Property<DateTime>("DateEntrainement")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiastanceAParcourir")
                        .HasColumnType("int");

                    b.Property<int>("NombreSeance")
                        .HasColumnType("int");

                    b.Property<int>("PiscineNumPiscine")
                        .HasColumnType("int");

                    b.HasKey("NumEntrainement");

                    b.HasIndex("PiscineNumPiscine");

                    b.ToTable("Entrainements");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Piscine", b =>
                {
                    b.Property<int>("NumPiscine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumPiscine"));

                    b.Property<string>("AdressePiscine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomPiscine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NumPiscine");

                    b.ToTable("Piscines");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.PlanEntrainement", b =>
                {
                    b.Property<int>("IdPlanEntrainement")
                        .HasColumnType("int");

                    b.Property<int>("NumEntrainementFk")
                        .HasColumnType("int");

                    b.Property<int>("NumLicenceFk")
                        .HasColumnType("int");

                    b.Property<int>("DistanceParcourue")
                        .HasColumnType("int");

                    b.HasKey("IdPlanEntrainement", "NumEntrainementFk", "NumLicenceFk");

                    b.HasIndex("NumEntrainementFk");

                    b.HasIndex("NumLicenceFk");

                    b.ToTable("PlanEntrainements");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Entrainement", b =>
                {
                    b.HasOne("E.ApplicationCore.Domain.Piscine", "Piscine")
                        .WithMany("Entrainements")
                        .HasForeignKey("PiscineNumPiscine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piscine");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.PlanEntrainement", b =>
                {
                    b.HasOne("E.ApplicationCore.Domain.Entrainement", "Entrainement")
                        .WithMany("PlanEntrainements")
                        .HasForeignKey("NumEntrainementFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E.ApplicationCore.Domain.Athlete", "Athele")
                        .WithMany("planEntrainements")
                        .HasForeignKey("NumLicenceFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Athele");

                    b.Navigation("Entrainement");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Athlete", b =>
                {
                    b.Navigation("planEntrainements");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Entrainement", b =>
                {
                    b.Navigation("PlanEntrainements");
                });

            modelBuilder.Entity("E.ApplicationCore.Domain.Piscine", b =>
                {
                    b.Navigation("Entrainements");
                });
#pragma warning restore 612, 618
        }
    }
}
